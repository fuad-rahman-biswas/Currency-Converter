import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.net.*;

public class CurrencyConverter extends JFrame implements ActionListener {
    private static final String API_KEY = "4aa8de0236afc0dbdbda5197";
    private static final String API_ENDPOINT = "https://v6.exchangerate-api.com/v6/4aa8de0236afc0dbdbda5197/latest/";
    public static String[] CURRENCIES = {
            "USD", "AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG",
            "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB",
            "BRL", "BSD", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP",
            "CNY", "COP", "CRC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD",
            "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "FOK", "GBP", "GEL", "GGP",
            "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG",
            "HUF", "IDR", "ILS", "IMP", "INR", "IQD", "IRR", "ISK", "JEP", "JMD",
            "JOD", "JPY", "KES", "KGS", "KHR", "KID", "KMF", "KRW", "KWD", "KYD",
            "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LYD", "MAD", "MDL", "MGA",
            "MKD", "MMK", "MNT", "MOP", "MRU", "MUR", "MVR", "MWK", "MXN", "MYR",
            "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN",
            "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF",
            "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SOS", "SRD",
            "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY",
            "TTD", "TVD", "TWD", "TZS", "UAH", "UGX", "UYU", "UZS", "VEF", "VND",
            "VUV", "WST", "XAF", "XCD", "XDR", "XOF", "XPF", "YER", "ZAR", "ZMW",
            "ZWL"
    };
    
    
    public CurrencyConverter() {
        initComponents();
        populateCurrencyBoxes();
        convertButton.addActionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toLabel = new javax.swing.JLabel();
        AmountLabel = new javax.swing.JLabel();
        fromLabel = new javax.swing.JLabel();
        AmountField = new javax.swing.JTextField();
        toCurrencyBox = new javax.swing.JComboBox<>();
        fromCurrencyBox = new javax.swing.JComboBox<>();
        convertButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        resultLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Currency Converter");
        setForeground(java.awt.Color.white);
        setLocation(new java.awt.Point(600, 180));
        setMinimumSize(new java.awt.Dimension(400, 380));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        toLabel.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        toLabel.setText("TO");
        getContentPane().add(toLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, -1, -1));

        AmountLabel.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        AmountLabel.setText("AMOUNT");
        getContentPane().add(AmountLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        fromLabel.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        fromLabel.setText("FROM");
        getContentPane().add(fromLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        AmountField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(AmountField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 210, 30));

        toCurrencyBox.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        toCurrencyBox.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(toCurrencyBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 150, 30));

        fromCurrencyBox.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        fromCurrencyBox.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(fromCurrencyBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 150, 30));

        convertButton.setBackground(new java.awt.Color(204, 0, 0));
        convertButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        convertButton.setForeground(new java.awt.Color(255, 255, 255));
        convertButton.setText("CONVERT");
        getContentPane().add(convertButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 190, 40));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, -1, -1));

        resultLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(resultLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 280, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void populateCurrencyBoxes() {
        DefaultComboBoxModel<String> fromModel = new DefaultComboBoxModel<>(CURRENCIES);
        DefaultComboBoxModel<String> toModel = new DefaultComboBoxModel<>(CURRENCIES);
        fromCurrencyBox.setModel(fromModel);
        toCurrencyBox.setModel(toModel);
        fromCurrencyBox.setSelectedIndex(0);
        toCurrencyBox.setSelectedIndex(1);
    }
    
    public double convert(double amount, String fromCurrency, String toCurrency) throws IOException {
         // Making Request
    URL url = new URL(API_ENDPOINT + fromCurrency);
    HttpURLConnection request = (HttpURLConnection) url.openConnection();
    request.connect();

    BufferedReader in = new BufferedReader(new InputStreamReader(request.getInputStream()));
    String inputLine;
    StringBuilder content = new StringBuilder();
    while ((inputLine = in.readLine()) != null) {
        content.append(inputLine);
    }
    in.close();

    // Parse the JSON data manually
    String json = content.toString();
    double rateFrom = extractRate(json, fromCurrency);
    double rateTo = extractRate(json, toCurrency);

    return amount * (rateTo / rateFrom);
}
    
    
//Extract Rate Class
    private double extractRate(String json, String currency) {
        String searchKey = "\"" + currency + "\":";
        int startIndex = json.indexOf(searchKey) + searchKey.length();
        int endIndex = json.indexOf(",", startIndex);
        if (endIndex == -1) {
            endIndex = json.indexOf("}", startIndex);
        }
        String rateString = json.substring(startIndex, endIndex).trim();
        if (rateString.startsWith("\"")) {
            rateString = rateString.substring(1, rateString.length() - 1); // Remove quotes if necessary
        }
        return Double.parseDouble(rateString);
}
    
    //ActioPerformed Class
    public void actionPerformed(ActionEvent e) {       
        try {
            double amount = Double.parseDouble(AmountField.getText());
            String fromCurrency = (String) fromCurrencyBox.getSelectedItem();
            String toCurrency = (String) toCurrencyBox.getSelectedItem();
            double result = convert(amount, fromCurrency, toCurrency);

            resultLabel.setText(String.format("%.2f %s = %.2f %s", amount, fromCurrency, result, toCurrency));
            resultLabel.setFont(new Font("Segoe UI", Font.BOLD, 16));
            resultLabel.setForeground(Color.BLACK);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid amount format.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
     
    //Main Class
    public static void main(String args[]) {
            java.awt.EventQueue.invokeLater(() -> new CurrencyConverter().setVisible(true));

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CurrencyConverter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AmountField;
    private javax.swing.JLabel AmountLabel;
    private javax.swing.JButton convertButton;
    private javax.swing.JComboBox<String> fromCurrencyBox;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JComboBox<String> toCurrencyBox;
    private javax.swing.JLabel toLabel;
    // End of variables declaration//GEN-END:variables
}
